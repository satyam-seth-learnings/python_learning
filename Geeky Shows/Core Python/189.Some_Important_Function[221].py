# int() Function
a=10.56
print('Float:',a)
print(type(a))
new_a=int(a)
print('Int:',new_a)
print(type(new_a))
b='10'
print('String:',b)
print(type(b))
new_b=int(b)
print('Int:',new_b)
print(type(new_b))
c='Satyam'
print('String:',c)
print(type(c))
# new_c=int(c)  ValueError: invalid literal for int() with base 10: 'Satyam'
# float() Function
d=10
print('Int:',d)
print(type(d))
new_d=float(d)
print('Float:',new_d)
print(type(new_d))
e='10.56'
print('String:',e)
print(type(e))
new_e=float(e)
print('Float:',new_e)
print(type(new_e))
f='Satyam'
print('String:',f)
print(type(f))
# new_f=float(f)    ValueError: could not convert string to float: 'Satyam'
# str() Function
g=10
print('Int:',g)
print(type(g))
new_g=str(g)
print('String:',new_g)
print(type(new_g))
h=10.56
print('Float:',h)
print(type(h))
new_h=str(h)
print('String:',new_h)
print(type(new_h))
# list() Function
i=(10,20,30)
print(i)
print(type(i))
new_i=list(i)
print(new_i)
print(type(new_i))
j={10,20,30}
print(j)
print(type(j))
new_j=list(j)
print(new_j)
print(type(new_j))
k='Satyam'
print(k)
print(type(k))
new_k=list(k)
print(new_k)
print(type(new_k))
l={101:'Satyam',102:'Seth'}
print(l)
print(type(l))
new_l=list(l)
print(new_l)
print(type(new_l))
# tuple() Function
m=[10,20,30]
print(m)
print(type(m))
new_m=tuple(m)
print(new_m)
print(type(new_m))
n={10,20,30}
print(n)
print(type(n))
new_n=tuple(n)
print(new_n)
print(type(new_n))
o='Satyam'
print(o)
print(type(o))
new_o=tuple(o)
print(new_o)
print(type(new_o))
p={101:'Satyam',102:'Seth'}
print(p)
print(type(p))
new_p=tuple(p)
print(new_p)
print(type(new_p))
# set() Function
q=[10,20,30]
print(q)
print(type(q))
new_q=set(q)
print(new_q)
print(type(new_q))
r=(10,20,30)
print(r)
print(type(r))
new_r=set(r)
print(new_r)
print(type(new_r))
s='Satyam'
print(s)
print(type(s))
new_s=set(s)
print(new_s)
print(type(new_s))
t={101:'Satyam',102:'Seth'}
print(t)
print(type(t))
new_t=set(t)
print(new_t)
print(type(new_t))
# dict() Function
u=[(101,'Satyam'),(102,'Seth')]
print(u)
print(type(u))
new_u=dict(u)
print(new_u)
print(type(new_u))